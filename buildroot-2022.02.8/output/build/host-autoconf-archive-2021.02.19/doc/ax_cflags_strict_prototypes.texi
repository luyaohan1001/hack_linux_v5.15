@node ax_cflags_strict_prototypes
@unnumberedsec ax_cflags_strict_prototypes

@majorheading Synopsis

@smallexample
AX_CFLAGS_STRICT_PROTOTYPES [(shellvar [,default, [A/NA]]
@end smallexample

@majorheading Description

Try to find a compiler option that requires strict prototypes.

The sanity check is done by looking at sys/signal.h which has a set of
macro-definitions SIG_DFL and SIG_IGN that are cast to the local
signal-handler type. If that signal-handler type is not fully qualified
then the system headers are not seen as strictly prototype clean.

For the GNU CC compiler it will be -fstrict-prototypes
-Wstrict-prototypes The result is added to the shellvar being CFLAGS by
default.

DEFAULTS:

@smallexample
 - $1 shell-variable-to-add-to : CFLAGS
 - $2 add-value-if-not-found : nothing
 - $3 action-if-found : add value to shellvariable
 - $4 action-if-not-found : nothing
@end smallexample

NOTE: These macros depend on AX_APPEND_FLAG.

@majorheading Source Code

Download the
@uref{http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_cflags_strict_prototypes.m4,latest
version of @file{ax_cflags_strict_prototypes.m4}} or browse
@uref{http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cflags_strict_prototypes.m4,the
macro's revision history}.

@majorheading License

@w{Copyright @copyright{} 2008 Guido U. Draheim @email{guidod@@gmx.de}}

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.
